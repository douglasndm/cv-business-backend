# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Configurando node
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.x
          
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
          
      # INSTALAR DEPENDENCIAS NPM/Yarn
      - name: Instal dependencies
        run: yarn
        
      # Realização da build
      - name: Run build
        env:
          FIREBASE_FILE: ${{ secrets.FIREBASE_ACCOUNT_KEY }}
        run: |
          yarn build
          ls
          echo $FIREBASE_FILE > ./dist/Config/Firebase/ServiceAccountKey.json
          
        
      - name: Copy code to Digital Ocean
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: ".,!node_modules"
          target: "~/apps/teams"
                    
      - name: Run production scripts
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |            
            cd "~/apps/teams"
            yarn            
            ~/apps/teams/node_modules/.bin/typeorm migration:run
            pm2 restart ExpiryTeams
            

